version: "3.3"

services:
  proxy:
    image: {{ REGISTRY }}/meditor/meditor_proxy:{{ PROXY_VERSION }}
    restart: on-failure
    ports:
      - "80:8080"
    depends_on:
      - database
    environment:
      - SERVER_HOST=meditor_server
      - UI_HOST=meditor_ui
      - MONITOR_HOST=meditor_monitor
      - NATS_HOST=meditor_nats
    deploy:
      placement:
        constraints:
          - node.labels.database == primary
    logging:
      driver: "json-file"
      options:
          max-file: 1
          max-size: 10m

  notifier:
    image: {{ REGISTRY }}/meditor/meditor_notifier:{{ NOTIFIER_VERSION }}
    restart: on-failure
    depends_on:
      - nats
    environment:
      - MAIL_HOST=mailhost.gsfc.nasa.gov
      - HOST_NAME=disc.gsfc.nasa.gov
      - MEDITOR_NATS_SERVER=nats://meditor_nats:4222
    deploy:
        placement:
          constraints:
            - node.labels.database == primary
    logging:
      driver: "json-file"
      options:
          max-file: 1
          max-size: 10m

  ui:
    image: {{ REGISTRY }}/meditor/meditor_ui:{{ UI_VERSION }}
    restart: on-failure
    environment:
      - NODE_ENV=development
      - APP_URL={{ APP_URL }}
      - MONGOURL=mongodb://meditor_database:27017
    deploy:
      placement:
        constraints:
          - node.labels.database == primary
    logging:
      driver: "json-file"
      options:
          max-file: 1
          max-size: 10m

  server:
    image: {{ REGISTRY }}/meditor/meditor_server:{{ SERVER_VERSION }}
    depends_on:
      - database
    restart: on-failure
    environment:
      - NODE_ENV=development
      - NODE_OPTIONS=--max_old_space_size=4096
      - APP_URL={{ APP_URL }}
      - MONGOURL=mongodb://meditor_database:27017
      - MEDITOR_NATS_SERVER=nats://meditor_nats:4222
      - COGNITO_CLIENT_DOMAIN={{ COGNITO_CLIENT_DOMAIN }}
      - COGNITO_CLIENT_ID={{ COGNITO_CLIENT_ID }}
      - COGNITO_CLIENT_SECRET={{ COGNITO_CLIENT_SECRET }}
      - COGNITO_INITIATE_AUTH_CLIENT_ID={{ COGNITO_INITIATE_AUTH_CLIENT_ID }}
      - COGNITO_REGION={{ REGION }}
      - COGNITO_USER_IDENTIFIER=USERNAME
      - COGNITO_USER_POOL_ID={{ COGNITO_USER_POOL_ID }}
      - NEW_USER_ROLES={{ NEW_USER_ROLES }}
    deploy:
      placement:
        constraints:
          - node.labels.database == primary
    logging:
      driver: "json-file"
      options:
          max-file: 1
          max-size: 10m

  cmr-subscriber:
    image: {{ REGISTRY }}/cmr/cmr-meditor-subscriber:{{ CMR_SUBSCRIBER_VERSION }}
    restart: always
    environment:
      - NODE_ENV=development
      - NATS_CLUSTER_ID=test-cluster
      - NATS_URL=nats://meditor_nats:4222
      - NATS_CLIENT_ID=meditor_cmr_adapter
      - MEDITOR_NATS_SERVER=nats://meditor_nats:4222
      - MEDITOR_BASELINE=UAT
      - AWS_REGION=us-west-2
    network_mode: "host"
    logging:
      driver: "json-file"
      options:
          max-file: 1
          max-size: 10m

  edpub-subscriber:
    image: {{ REGISTRY }}/edpub/meditor_subscriber:{{ EDPUB_VERSION }}
    restart: always
    depends_on:
      - nats
    environment:
      - CLIENT_ID=edpub
      - CHANNELS=meditor-Example-News
      - TARGET=edpub
      - NATS_CLUSTER_ID=test-cluster
      - NATS_SERVER=nats://meditor_nats:4222
      - SQS_QUEUE_URL=https://sqs.{{ REGION }}.amazonaws.com/{{ ACCOUNT_NUMBER }}/edpub_inbound_sqs.fifo
      - REGION={{ REGION }}
      - RESOURCE=overview
      - OPERATION=update
      - PUBLISH_URL={{ APP_URL }}
    logging:
      driver: "json-file"
      options:
          max-file: 1
          max-size: 10m

  edpub-overview-subscriber:
    image: {{ REGISTRY }}/edpub/edpub-overview-subscriber:{{ EDPUB_OVERVIEW_SUBSCRIBER_VERSION }}
    restart: always
    depends_on:
      - nats
    environment:
      - LOG_LEVEL=info
      - MEDITOR_ENVIRONMENT=UAT
      - NATS_CLIENT_ID=edpub-overview-subscriber
      - NATS_CLUSTER_ID=test-cluster
      - NATS_URL=nats://meditor_nats:4222
      - NODE_ENV=production
      - EDPUB_API_ROOT={{ APP_URL }}/api
      - EDPUB_OVERVIEW_APIKEY={{ EDPUB_OVERVIEW_APIKEY }}
    logging:
      driver: "json-file"
      options:
          max-file: 1
          max-size: 10m

  nats:
    image: {{ REGISTRY }}/nats-streaming:{{ NATS_VERSION }}
    restart: on-failure
    volumes:
      - /root/nats_volume:/nats/data
    deploy:
      placement:
        constraints:
          - node.labels.database == secondary
    logging:
      driver: "json-file"
      options:
          max-file: 1
          max-size: 10m

  database:
    image: {{ REGISTRY }}/certified/mongo:4.1.4
    restart: on-failure
    ports:
      - "47017:27017"
    volumes:
      - /root/data:/data/db
    deploy:
      placement:
        constraints:
          - node.labels.database == primary
    logging:
      driver: "json-file"
      options:
          max-file: 1
          max-size: 10m

  monitor:
    image: {{ REGISTRY }}/portainer/portainer:1.20.0
    command: -H unix:///var/run/docker.sock
    ports:
      - "9002:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - monitor_data:/data
    deploy:
      placement:
        constraints:
          - node.labels.database == primary
    logging:
      driver: "json-file"
      options:
          max-file: 1
          max-size: 10m

  agent:
    image: {{ REGISTRY }}/portainer/agent:1.1.2
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - target: 9001
        published: 9001
        protocol: tcp
        mode: host
    networks:
      - portainer_agent
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.database == primary
    logging:
      driver: "json-file"
      options:
          max-file: 1
          max-size: 10m

  docs:
    image: {{ REGISTRY }}/meditor/meditor_docs:{{ DOCS_VERSION }}
    restart: on-failure
    environment:
      - API_ORIGIN={{ APP_URL }}
    deploy:
      placement:
        constraints:
          - node.labels.database == primary
    logging:
      driver: "json-file"
      options:
          max-file: 1
          max-size: 10m

networks:
  portainer_agent:
    driver: overlay
    attachable: true

volumes:
  monitor_data:
